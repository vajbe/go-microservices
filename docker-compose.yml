version: "3.8"
services:
  user-service:
    build:
      context: ./services/users
    ports:
      - "8080:8080"
    environment:
      - USER_SERVICE_PORT=8080
      - USER_SERVICE_DB_HOST=postgres
      - USER_SERVICE_SCHEMA_PATH=/app/db/schema.sql
      - USER_SERVICE_REDIS_URL=redis:6379
    networks:
      - app-network
    depends_on:
      - redis
      - postgres
      - kafka

  product-service:
    build:
      context: ./services/product
    ports:
      - "8081:8081"
    environment:
      - PRODUCT_SERVICE_PORT=8081
      - PRODUCT_SERVICE_DB_HOST=postgres
      - PRODUCT_SERVICE_SCHEMA_PATH=/app/db/schema.sql
      - PRODUCT_SERVICE_REDIS_URL=redis:6379
      - PRODUCT_SERVICE_KAFKA_URL=kafka:9092
    depends_on:
      - redis
      - postgres
      - kafka
    networks:
      - app-network
  order-service:
    build:
      context: ./services/order
    ports:
      - "8082:8082"
    environment:
      - ORDER_SERVICE_PORT=8082
      - ORDER_SERVICE_DB_HOST=postgres
      - ORDER_SERVICE_SCHEMA_PATH=/app/db/schema.sql
      - ORDER_SERVICE_REDIS_URL=redis:6379
      - ORDER_SERVICE_KAFKA_URL=kafka:9092
    depends_on:
      - redis
      - postgres
      - kafka
    networks:
      - app-network
  postgres:
    image: postgres:15
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin # Username
      POSTGRES_PASSWORD: admin # Empty password
      POSTGRES_DB: admin # Default database
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./pg_hba.conf:/etc/postgresql/conf.d/pg_hba.conf # Mount custom pg_hba.conf
    command: postgres -c "hba_file=/etc/postgresql/conf.d/pg_hba.conf" # Use custom pg_hba.conf
    networks:
      - app-network

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network
  # auth-service:
  #   build:
  #     context: ./services/auth
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     - AUTH_SERVICE_PORT=8080
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pg_data:
